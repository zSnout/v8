---
import { Fa } from "@/components/Fa"
import { Unprose } from "@/components/Prose"
import ProseLayout from "@/layouts/ProseLayout.astro"
import {
  faCaretDown,
  faCaretRight,
  faMapSigns,
} from "@fortawesome/free-solid-svg-icons"
import { getCollection } from "astro:content"
import { STYLES } from "../../../../astro.styles.mjs"

const pages = await getCollection("ithkuil")

const data = await Promise.all(
  pages.map(async (entry) => [entry, (await entry.render()).Content] as const),
)
---

<ProseLayout
  description="TODO"
  title="Ithkuil by Example"
  og={{
    title: "Ithkuil by Example",
    imageAlt: "TODO",
    imageSrc: "TODO",
  }}
  class="[&_.z-thematic-break]:!hidden"
>
  <h1>Ithkuil by Example</h1>
  <p>
    <em>hlëu sakawi — by sakawi</em>
  </p>

  {
    data.map(([entry, Content]) => {
      const num = entry.id.slice(0, 2)
      return (
        <>
          <Unprose>
            <hr class="!w-full max-w-full border-dashed border-z transition-[margin,opacity] [details:not([open])+*:has(+details:not([open]))>&]:m-0 [details:not([open])+*:has(+details:not([open]))>&]:opacity-0" />
          </Unprose>

          <details
            class="group"
            open={entry.data.open !== false}
            id={"ithkuil-learn/" + entry.id}
          >
            <summary class="relative block">
              <Fa
                icon={faCaretRight}
                class="absolute -left-5 top-2 size-4 group-open:hidden"
                title={false}
              />
              <Fa
                icon={faCaretDown}
                class="absolute -left-5 top-2 hidden size-4 group-open:block"
                title={false}
              />
              <h2 class="contents select-none">
                {entry.id[2] == "@" ?
                  <span class="inline-flex w-[2ch] align-[-3px] font-mono font-normal text-z">
                    <Fa
                      icon={faMapSigns}
                      class="m-auto size-[1em]"
                      title="Interlude"
                    />
                  </span>
                : <strong class="font-mono font-normal text-z">{num}</strong>}
                {" — "}
                {entry.data.title.split(/\bCA\b/g).flatMap((x, i) =>
                  i == 0 ? x : (
                    [
                      <span>
                        C<sub>A</sub>
                      </span>,
                      x,
                    ]
                  ),
                )}
                {entry.data.tag && (
                  <span
                    class={
                      "inline-block rounded-md border px-2 py-2 text-lg/[1] font-semibold transition [text-box:trim-both_cap_alphabetic] " +
                      STYLES[entry.data.tag]![1]
                    }
                  >
                    {STYLES[entry.data.tag]![3]}
                  </span>
                )}
              </h2>
            </summary>

            <Content />
          </details>
        </>
      )
    })
  }
</ProseLayout>

{/* inline so it runs before the page is rendered */}
<script is:inline>
  const els = document.querySelectorAll("details[id^='ithkuil-learn/']")

  for (const el of els) {
    const key = "ithkuil/learn/expand/" + el.id
    if (localStorage.getItem(key) == "false") {
      el.open = false
    }
    if (localStorage.getItem(key) == "true") {
      el.open = true
    }
    el.addEventListener("toggle", () => {
      localStorage.setItem(key, "" + el.open)
    })
  }
</script>
