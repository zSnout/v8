---
import { Reprose, Unprose } from "@/components/Prose"
import ProseLayout from "@/layouts/ProseLayout.astro"
import type { GetStaticPathsItem } from "astro"
import { CollectionEntry, getCollection } from "astro:content"

export interface Props {
  entry: CollectionEntry<"blog">
}

export async function getStaticPaths() {
  const blog = await getCollection("blog")

  return blog.map<GetStaticPathsItem>((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

const { entry } = Astro.props as Props
const { Content, headings } = await entry.render()

const openGraphImage = (
  await import(
    `../../../assets/blog/${
      entry.data.draft
        ? "draft"
        : entry.id.endsWith(".mdx")
        ? entry.id.slice(0, -4)
        : entry.id.slice(0, -3)
    }.jpg`
  )
).default
---

<ProseLayout
  description={entry.data.description}
  headings={headings}
  title={`${entry.data.title} | zSnout Blog`}
  og={{
    title: entry.data.title,
    imageSrc: openGraphImage,
    imageAlt: entry.data.imageAlt,
    article: {
      authors: ["Zachary Sakowitz"],
      publishedTime: entry.data.published,
      tags: [entry.data.category],
      modifiedTime: entry.data.updated,
    },
  }}
>
  <Unprose class="relative -mt-28 mb-28 flex flex-col bg-z-border pt-28">
    <Reprose>
      <h1 class="relative z-20 m-0 mb-4 transition">{entry.data.title}</h1>

      <p class="relative z-20 m-0 mb-12 transition">
        {entry.data.description.repeat(20)}
      </p>

      <img
        class="relative z-20 m-0 -mb-20 block rounded-lg shadow-md transition"
        src={openGraphImage}
      />
    </Reprose>
  </Unprose>

  <Content />
</ProseLayout>
